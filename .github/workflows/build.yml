name: Build Metamod + CounterStrikeSharp + PoorSharpTimer

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

env:
  METAMOD_URL_LINUX: https://mms.alliedmods.net/mmsdrop/2.0/mmsource-2.0.0-git1366-linux.tar.gz
  CSS_URL_LINUX: https://github.com/roflmuffin/CounterStrikeSharp/releases/download/v1.0.340/counterstrikesharp-with-runtime-linux-1.0.340.zip
  STFIXES_LINUX: https://github.com/SharpTimer/STFixes-metamod/releases/download/9-23/stfixes-metamod-9-23-linux.zip
  MOVUNLOCKER_LINUX: https://github.com/Source2ZE/MovementUnlocker/releases/download/v1.8/MovementUnlocker-v1.8-linux.tar.gz
  RAMPBUGFIX_LINUX: https://github.com/Interesting-exe/CS2Fixes-RampbugFix/releases/download/9-16/CS2Fixes-RampbugFix-9-16-linux.zip
  
  CS2_TAGS: https://github.com/schwarper/cs2-tags/releases/download/v1.15/cs2-tags-v1.15.zip
  PST_REPO: https://github.com/Letaryat/poor-sharptimer.git
  PST_BRANCH: dev
  OUT_DIR: bundle
  ZIP_NAME: sharptimer-drop-in.zip

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      - name: Prep environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip zip git
          rm -rf "$OUT_DIR" pst out_pst
          mkdir -p "$OUT_DIR"

      - name: Download Metamod
        run: curl -L "$METAMOD_URL_LINUX" -o mmsource.tar.gz

      - name: Extract Metamod into addons/metamod/
        run: tar -xzf mmsource.tar.gz -C "$OUT_DIR"
      

      - name: Download CounterStrikeSharp (with runtime)
        run: curl -L "$CSS_URL_LINUX" -o css.zip

      - name: Extract CounterStrikeSharp into bundle
        run: unzip -q css.zip -d "$OUT_DIR"

      - name: Download STFixes-MetaMod
        run: curl -L "$STFIXES_LINUX" -o stfixes.zip

      - name: Extract STFixes-MetaMod into bundle
        run: unzip -q stfixes.zip -d "$OUT_DIR"

      - name: Download MovementUnlocker
        run: curl -L "$MOVUNLOCKER_LINUX" -o movunlocker.tar.gz

      - name: Extract MovementUnlocker into bundle
        run: tar -xvf movunlocker.tar.gz -C "$OUT_DIR"

      - name: Download CS2-RamppBugFix
        run: curl -L "$RAMPBUGFIX_LINUX" -o rampfix.zip

      - name: Extract CS2-RampBugFix into bundle
        run: unzip -q rampfix.zip -d "$OUT_DIR"

      - name: Download CS2-TAGS
        run: curl -L "$CS2_TAGS" -o cs2-tags.zip

      - name: Extract CS2-tags into CSS
        run: unzip -q rampfix.zip -d "$OUT_DIR/addons/counterstrikesharp/"

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Clone PoorSharpTimer (dev branch)
        run: |
          git clone --depth 1 --branch "$PST_BRANCH" "$PST_REPO" pst
          echo "PST_COMMIT=$(git -C pst rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Restore & Publish PoorSharpTimer
        run: |
          cd pst
          dotnet build
          cd -

      - name: Place PoorSharpTimer plugin into bundle
        run: |
          rsync -avrt pst/Build/ $OUT_DIR

      - name: Show resulting structure (for logs)
        run: |
          echo "Contents of $OUT_DIR:"
          find "$OUT_DIR" -maxdepth 3 -type d -print

      - name: Create distributable zip
        run: |
          cd $OUT_DIR
          zip -r "../$ZIP_NAME" *
          cd -

      - name: Upload artifact (CI)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: ${{ env.ZIP_NAME }}

      # - name: Create Git tag
      #   id: tagger
      #   run: |
      #     TAG="bundle-${GITHUB_RUN_NUMBER}"
      #     echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     tag_name: ${{ steps.tagger.outputs.tag }}
      #     name: Metamod + CounterStrikeSharp + PoorSharpTimer ${{ steps.tagger.outputs.tag }}
      #     body: |
      #       Automated bundle built by CI.

      #       Includes:
      #       - Metamod: ${{ env.METAMOD_URL }}
      #       - CounterStrikeSharp (with runtime): ${{ env.CSS_URL }}
      #       - PoorSharpTimer (branch `${{ env.PST_BRANCH }}`, commit ${{ env.PST_COMMIT }})

      #       Structure:
      #       addons/
      #         metamod/
      #         counterstrikesharp/
      #           plugins/poor-sharptimer/*.dll
      #           configs/poor-sharptimer/ (if present)
      #     files: |
      #       ${{ env.ZIP_NAME }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
